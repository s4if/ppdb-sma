<?php

namespace Proxies\__CG__;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class RegistrantEntity extends \RegistrantEntity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'password', 'name', 'sex', 'previousSchool', 'nisn', 'program', 'registrationTime', 'registrantData', 'father', 'mother', 'guardian');
        }

        return array('__isInitialized__', 'id', 'password', 'name', 'sex', 'previousSchool', 'nisn', 'program', 'registrationTime', 'registrantData', 'father', 'mother', 'guardian');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (RegistrantEntity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSex', array());

        return parent::getSex();
    }

    /**
     * {@inheritDoc}
     */
    public function getPreviousSchool()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreviousSchool', array());

        return parent::getPreviousSchool();
    }

    /**
     * {@inheritDoc}
     */
    public function getNisn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNisn', array());

        return parent::getNisn();
    }

    /**
     * {@inheritDoc}
     */
    public function getProgram()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProgram', array());

        return parent::getProgram();
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationTime', array());

        return parent::getRegistrationTime();
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrantData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrantData', array());

        return parent::getRegistrantData();
    }

    /**
     * {@inheritDoc}
     */
    public function getFather()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFather', array());

        return parent::getFather();
    }

    /**
     * {@inheritDoc}
     */
    public function getMother()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMother', array());

        return parent::getMother();
    }

    /**
     * {@inheritDoc}
     */
    public function getGuardian()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGuardian', array());

        return parent::getGuardian();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setSex($sex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSex', array($sex));

        return parent::setSex($sex);
    }

    /**
     * {@inheritDoc}
     */
    public function setPreviousSchool($previousSchool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreviousSchool', array($previousSchool));

        return parent::setPreviousSchool($previousSchool);
    }

    /**
     * {@inheritDoc}
     */
    public function setNisn($nisn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNisn', array($nisn));

        return parent::setNisn($nisn);
    }

    /**
     * {@inheritDoc}
     */
    public function setProgram($program)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProgram', array($program));

        return parent::setProgram($program);
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationTime(\DateTime $registrationTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationTime', array($registrationTime));

        return parent::setRegistrationTime($registrationTime);
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrantData(\RegistrantDataEntity $registrantData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrantData', array($registrantData));

        return parent::setRegistrantData($registrantData);
    }

    /**
     * {@inheritDoc}
     */
    public function setFather(\ParentEntity $father)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFather', array($father));

        return parent::setFather($father);
    }

    /**
     * {@inheritDoc}
     */
    public function setMother(\ParentEntity $mother)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMother', array($mother));

        return parent::setMother($mother);
    }

    /**
     * {@inheritDoc}
     */
    public function setGuardian(\ParentEntity $guardian)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuardian', array($guardian));

        return parent::setGuardian($guardian);
    }

}
